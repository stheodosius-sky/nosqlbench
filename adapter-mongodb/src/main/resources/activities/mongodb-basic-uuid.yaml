description: An example of a basic mongo insert and find with UUID

scenarios:
  default:
    rampup: run driver=mongodb tags==block:rampup cycles===TEMPLATE(rampup-cycles,100000000) threads=auto
    main: run driver=mongodb tags==block:main cycles===TEMPLATE(main-cycles,100000000) threads=auto
bindings:
  seq_uuid: Mod(<<uuidCount:100000000>>L); ToHashedUUID() -> java.util.UUID; ToString() -> String
  rw_uuid: <<uuidDist:Uniform(0,100000000)->long>>; ToHashedUUID() -> java.util.UUID; ToString() -> String
  seq_key: Mod(<<keyCount:1000000>>L); ToInt()
  seq_value: Mod(<<valueCount:1000000000>>L); <<valueSizeDist:Hash()>>; ToLong()
  rw_key: <<keyDist:Uniform(0,1000000)->long>>; ToInt()
  rw_value: <<valDist:Uniform(0,1000000000)->long>>; <<valueSizeDist:Hash()>>; ToLong()
blocks:
  params:
    readPreference: primary
  rampup:
    ops:
      rampup-insert: |
        {
          insert: "<<collection:keyvalueuuid>>",
          documents: [ { _id: UUID("{seq_uuid}"),
                         key: {seq_key},
                         value: NumberLong({seq_value}) } ]
        }
  verify:
    params:
      type: read
      cl: <<read_cl:LOCAL_QUORUM>>
      verify-fields: _id->seq_uuid, key->seq_key, value->seq_value
    ops:
      verify-find: |
        {
          find: "<<collection:keyvalueuuid>>",
          filter: { _id: UUID("{seq_uuid}") }
        }
  main-read:
    params:
      ratio: <<read_ratio:1>>
      type: read
      readPreference: primary
    ops:
      main-find: |
        {
          find: "<<collection:keyvalueuuid>>",
          filter: { _id: UUID("{rw_uuid}") }
        }
  main-write:
    params:
      ratio: <<write_ratio:1>>
      type: write
      readPreference: primary
    ops:
      main-insert: |
        {
          insert: "<<collection:keyvalueuuid>>",
          documents: [ { _id: UUID("{rw_uuid}")
                         key: {rw_key},
                         value: NumberLong({rw_value}) } ]
        }